So congratulations, you've finished two courses. At this point, I think it's important to think about what are you going to do next because you sort of know how to program. You're not like a super expert programmer, but I've known people that have gotten this much programming and it begins to change their lives. So let me give you some very specific suggestions as to what you should do next. First off, as I told you at the very beginning, one of my goals is for you to take more classes. I want you to actually take intro classes. Don't feel like you have to go take like this class and then an advanced class, that's actually almost the worst thing that you can do. Because unless, of course, you zoomed through this class in a super hurry and you were done in like two hours, that's a different problem. But if you struggled, the next class you should take is another intro class, some of those classes that I mentioned in the beginning. We have a bunch of them at University of Michigan. Even another intro Python class. That's not a bad idea, because you are at this point capable of writing a 25-line piece of Python code. You need to get to the point where you can competently write 1,000 lines of code and that's kind of when you start to be able to use this sort of in a professional situation. And so that next class, which is a first Python class, like this is the "zeroth" Python class, the first Python class will teach you how to write programs, let's just say around 1,000 lines of code. And they're going to show you things about Python that I kind of ignored as I went by. Because I'm just trying to teach you the basics and get you through to the starting point. This is the beginning of you learning to program, not the end. Now, I'm also a big fan of meeting people. There are Python meet-ups all around the world. There's an organization called Free Code Camp that has face-to-face meetings and new new little code camps are coming together. And again, developing your skill as a programmer is not just a bunch of skills that you learn by yourself, but it's being embedded with people. And that's what leads to you getting a job, right? You think, oh I get all these skills, and like I sit in my house and I got all these skills. Then someone comes to my house and says, "You, here's your job," and the answer is, no. The job part of a programmer is more about, well, it's about skills but it's also about people. And that's why going places and getting to know people who are programmers and understanding them. So another, if you can't find a code camp or a meet-up, go to a Python conference. Yeah, you're a beginner but you're going to love it. You're absolutely going to love, Python conferences happen all over the world. Python is just a giant movement. There is a thing called Django Girls where they take beginners and teach him how to build web pages in Python, awesome. Right? Another way into this and I've talked to a lot of students, is that, you have a job and your job is X, your job is a librarian. And you think, I'm not technical, but all of a sudden, you get a file and that file has data from the checkouts and check-ins of books. And it's kind of messed up and you'd like to find out by looking at this file, which books are checked out most often. And you think to yourself, hmm, that sounds strangely like a program that I wrote where I read a file, I parsed it into pieces, and I made a dictionary and I counted things. Let me see if I can write a program kind of like that to handle this piece of data at work. And now you take a four-hour task of reading through this file and turn it into a four-hour task of writing a program and then a 10-second task of running that program. And then the next week, when you get that same problem, that same file for the next week, it takes you 10 seconds. And guess what? You're now the library's programmer, because you wrote 120 lines of Python that can read the file that saves somebody four hours of work. And on, and on. So I've heard of a lot of students that just sort of evolve into programming as a hobby at work, right? They're helping people at work. You might be a salesperson and you want to figure out the top three sales people that you can't quite figure out from a spreadsheet. So you read that spreadsheet into Python, do some calculations, or you want to see who has done the best in the last three quarters and you've only and this one. So you're a salesperson, you write some Python, you get answer to the question that you want, and you're a hero. Or maybe you're a better salesperson. Right? And so those are all kind of ways that you take a non-technical job and add technology to it and students do that all time and it's just really, really awesome. But the next kind of step up is to go get a new job. Go get a Python job. Wouldn't that be cool if you're a cab driver and then you went and applied for a job. I see all these wonderful selfies that people take where they say, my first day on my job, a year ago I didn't know anything about programming and now I did all this. Now, this is my first programming job and I'm so excited. Whether I was part of it or not, I'm excited when people can change their job because programming jobs usually are pretty well paid, safe, you get to relax and use your brain rather than use your arms or hands or be a delivery person or whatever. Not that those are bad jobs, it's just I like programming jobs. Here's the problem. It is really difficult to just get with a beginning programming skills. It is difficult to get that first job. And let me explain why. It's counter-intuitive. If you're a company, and you want to post a job, and in that job says, "Hi, I want to hire new programmer and all they need to know is a little tiny bit of Python and we'll teach you everything else." It turns out a lot of jobs like that. But if they post that job, they're going to get like a 1,000 applications because there are so many people that want that job and have the skills. Because the skills aren't that big of a deal, a lot of people can get those, have those or can get those skills, and they all apply. So guess what they do? They don't post those jobs. They post like a more senior job or whatever. And you might be sitting in a meet-up somewhere, just kind of listening, you've been going to it for a couple of months, and you'll hear someone say, "Man, we can't find anybody, we can't hire anybody. There's nobody in the marketplace that knows like even the most basic Python stuff. I can't hire people, I can hire like five people." And you're sitting there and you go like, "Hi. I'm Chuck, I know a little Python." And they're like, "Really? And you need a job? Like why don't you come down on Tuesday, let's have some lunch." And then on Friday you've got a job. Now, there were 1,000 people in your city that wanted that job, but they were afraid to post it because all 1,000 would apply for it, but you were the one at the meet-up and you were the one that overheard the mention. So that's how a lot of beginning programming jobs work. Is you should get to know somebody, and then they don't have to talk to 1,000 people. They can see you that you're coming to the meet-up, they can see that you heard, you talk a little bit about Python, you kind of know what you're doing. You already passed the interview. Right? So that to me, that getting that first job is extra difficult and this is why I'm so obsessed with you meeting people and going places. Go places that you're comfortable like meet-ups and PyCon, Free Code Camp, Django Girls. But whether you get a job or not, if you still don't have a job yet, keep learning. Right? Keep learning. Learn more about Python. Learn something about data mining. Learn something about natural languages. Learn something about databases. Learn how to build a webpage with Django or something. Learn a new programming language, don't just learn Python. Because what you will find is that, you now have this place to start learning. And as you grow, then you become more and more valuable in your current job and you become more and more qualified for other jobs, because the world isn't all Python. It isn't all Python, and dictionaries, and counting. and so if you go learn PHP and maybe in your city there aren't that many Python jobs and there are PHP jobs, now you've got yourself a job. Or you maybe learned some web design or accessibility or how to build legally appropriate websites for people with disabilities. So the more you learn, the better you are. And the pieces just start to knit together and then, then you're moving towards being more of a senior person, more of an architect, more of a designer. So don't stop learning, use this course as your starting point. And I look forward to hearing how it all turns out for you.
